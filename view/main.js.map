{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dns-cache/dns-cache.component.css","webpack:///./src/app/components/dns-cache/dns-cache.component.html","webpack:///./src/app/components/dns-cache/dns-cache.component.ts","webpack:///./src/app/components/general/general.component.css","webpack:///./src/app/components/general/general.component.html","webpack:///./src/app/components/general/general.component.ts","webpack:///./src/app/components/menus/menus.component.css","webpack:///./src/app/components/menus/menus.component.html","webpack:///./src/app/components/menus/menus.component.ts","webpack:///./src/app/components/mitm/mitm.component.css","webpack:///./src/app/components/mitm/mitm.component.html","webpack:///./src/app/components/mitm/mitm.component.ts","webpack:///./src/app/components/records/records.component.css","webpack:///./src/app/components/records/records.component.html","webpack:///./src/app/components/records/records.component.ts","webpack:///./src/app/components/server/server.component.css","webpack:///./src/app/components/server/server.component.html","webpack:///./src/app/components/server/server.component.ts","webpack:///./src/app/modules/common.module.ts","webpack:///./src/app/modules/records/records.module.ts","webpack:///./src/app/pipes/capacity.pipe.ts","webpack:///./src/app/pipes/html2text.pipe.ts","webpack:///./src/app/pipes/ips-format.pipe.ts","webpack:///./src/app/pipes/nl2br.pipe.ts","webpack:///./src/app/service/dns-cache.service.ts","webpack:///./src/app/service/dump.service.ts","webpack:///./src/app/service/general.service.ts","webpack:///./src/app/service/records.service.ts","webpack:///./src/app/service/server.service.ts","webpack:///./src/app/utils/utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".st-layout {\\n    height: 100vh;\\n}\\n.st-white-bgc {\\n    background: #fff;\\n}\\n.st-footer{\\n    position:fixed;\\n}\"","module.exports = \"<!-- NG-ZORRO -->\\n<nz-layout class=\\\"st-layout\\\">\\n  <nz-sider>\\n      <app-menus></app-menus>\\n  </nz-sider>\\n  <nz-layout>\\n    <nz-content class=\\\"st-white-bgc\\\">\\n      <router-outlet></router-outlet>\\n    </nz-content>\\n  </nz-layout>\\n</nz-layout>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shuttle';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RecordsComponent } from './components/records/records.component';\nimport { DnsCacheComponent } from './components/dns-cache/dns-cache.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgZorroAntdModule, NZ_I18N, zh_CN } from 'ng-zorro-antd';\nimport { registerLocaleData } from '@angular/common';\nimport zh from '@angular/common/locales/zh';\nimport { MenusComponent } from './components/menus/menus.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GeneralComponent } from './components/general/general.component';\nimport { ServerComponent } from './components/server/server.component';\nimport { IpsFormatPipe } from './pipes/ips-format.pipe';\nimport { Nl2BrPipe } from './pipes/nl2br.pipe';\nimport { Html2textPipe } from './pipes/html2text.pipe';\nimport { MitmComponent } from './components/mitm/mitm.component';\nimport { CapacityPipe } from './pipes/capacity.pipe';\n\nregisterLocaleData(zh);\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    redirectTo: '/records',\n    pathMatch: 'full'\n  },\n  {\n    path: 'records',\n    component: RecordsComponent\n  },\n  {\n    path: 'dns-cache',\n    component: DnsCacheComponent\n  },\n  {\n    path: 'servers',\n    component: ServerComponent\n  },\n  {\n    path: 'mitm',\n    component: MitmComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecordsComponent,\n    DnsCacheComponent,\n    MenusComponent,\n    GeneralComponent,\n    ServerComponent,\n    IpsFormatPipe,\n    Nl2BrPipe,\n    Html2textPipe,\n    MitmComponent,\n    CapacityPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    NgZorroAntdModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [{ provide: NZ_I18N, useValue: zh_CN }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".st-ext-title {\\n    background: #fafafa;\\n    width: 100%;\\n    height: 40px;\\n}\"","module.exports = \"<div style=\\\"height: calc(100vh - 40px);\\\">\\n  <nz-table #list [nzData]=\\\"cacheList\\\"\\n  [nzShowPagination]=\\\"false\\\"\\n  [nzFrontPagination]=\\\"false\\\"\\n  nzSize=\\\"small\\\"\\n  [nzScroll]=\\\"{y: 'calc(100vh - 80px)'}\\\">\\n    <thead>\\n      <tr>\\n        <th nzWidth=\\\"100px\\\">Type</th>\\n        <th nzWidth=\\\"300px\\\">DNSs</th>\\n        <th nzWidth=\\\"200px\\\">Domain</th>\\n        <th nzWidth=\\\"100px\\\">Country</th>\\n        <th >IPs</th>\\n      </tr>\\n    </thead>\\n    <tbody class=\\\"st-tbody\\\">\\n      <tr *ngFor=\\\"let cache of list.data\\\">\\n        <td>{{cache.Type}}</td>\\n        <td>{{cache.DNSs}}</td>\\n        <td>{{cache.Domain}}</td>\\n        <td>{{cache.Country}}</td>\\n        <td>\\n          <nz-tag *ngFor=\\\"let ip of cache.IPs\\\">{{ip}}</nz-tag>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </nz-table>\\n</div>\\n<div class=\\\"st-ext-title\\\">\\n  <div>\\n    <button style=\\\"margin: 4px;\\\" nz-button (click)=\\\"reflesh()\\\">\\n      <i class=\\\"anticon anticon-reload\\\" style=\\\"color: #2db7f5\\\"></i>\\n    </button>\\n    <button style=\\\"margin: 4px;\\\" nz-button (click)=\\\"clear()\\\">\\n        <i class=\\\"anticon anticon-delete\\\" style=\\\"color: #f50\\\"></i>\\n    </button>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DnsCacheService } from '../../service/dns-cache.service';\nimport { DnsCacheModule } from '../../modules/dns-cache.module';\nimport { inject } from '@angular/core/testing';\n\n@Component({\n  selector: 'app-dns-cache',\n  templateUrl: './dns-cache.component.html',\n  styleUrls: ['./dns-cache.component.css']\n})\nexport class DnsCacheComponent implements OnInit {\n  cacheList: DnsCacheModule[];\n\n  constructor(private service: DnsCacheService) { }\n\n  ngOnInit() {\n    this.reflesh();\n  }\n\n  reflesh() {\n    this.service.getCache().subscribe(list => this.cacheList = list);\n  }\n\n  clear() {\n    this.cacheList = [];\n    this.service.clearCache().subscribe(_ => {\n      this.reflesh();\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  general works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GeneralService } from '../../service/general.service';\n\n@Component({\n  selector: 'app-general',\n  templateUrl: './general.component.html',\n  styleUrls: ['./general.component.css']\n})\nexport class GeneralComponent implements OnInit {\n\n  constructor(private service: GeneralService) { }\n\n  ngOnInit() {\n  }\n\n  shutdown() {\n    this.service.shutdown().subscribe();\n  }\n\n  reload() {\n    this.service.reload().subscribe();\n  }\n}\n","module.exports = \".st-sider-menus{\\n    height: 100vh;\\n}\\n.st-switch {\\n    padding-top: 0.7em;\\n    padding-bottom: 0.7em;\\n}\\n.st-switch div span {\\n    margin-left: 1em;\\n}\"","module.exports = \"<ul nz-menu class=\\\"st-sider-menus\\\">\\n  <div (click)=\\\"githubHome()\\\" style=\\\"cursor: pointer;\\\">\\n    <img src=\\\"/assets/menus_logo.png\\\" width=\\\"40px\\\" height=\\\"40px\\\" \\n    style=\\\"float: left;margin: 5px;margin-left: 20px\\\"/>\\n    <h3 style=\\\"height: 50px;line-height: 50px;margin: 5px;margin-left: 80px;margin-bottom: 0px\\\">Shuttle</h3>\\n  </div>\\n  <nz-divider style=\\\"margin-top: 10px;margin-bottom: 5px\\\"></nz-divider>\\n  <li nz-menu-group>\\n    <span title>Speed</span>\\n    <div nz-row style=\\\"text-align: center;margin-bottom: 5px\\\">\\n      <nz-tag [nzColor]=\\\"'blue'\\\">\\n        <i class=\\\"anticon anticon-arrow-up\\\"></i>\\n        {{speed.up_speed}}\\n      </nz-tag>\\n      <nz-tag [nzColor]=\\\"'blue'\\\">\\n        {{speed.down_speed}}\\n        <i class=\\\"anticon anticon-arrow-down\\\"></i>\\n      </nz-tag>\\n    </div>\\n  </li>\\n  <li nz-menu-group>\\n    <span title>General</span>\\n    <ul>\\n      <li nz-menu-item routerLink=\\\"/servers\\\" \\n      routerLinkActive #rla1_1=\\\"routerLinkActive\\\" \\n      [nzSelected]=\\\"rla1_1.isActive\\\">Servers</li>\\n      <li nz-menu-item routerLink=\\\"/mitm\\\" \\n      routerLinkActive #rla1_2=\\\"routerLinkActive\\\" \\n      [nzSelected]=\\\"rla1_2.isActive\\\">MITM</li>\\n    </ul>\\n  </li>\\n  <li nz-menu-group>\\n    <span title>HTTP Records</span>\\n    <ul>\\n      <li nz-menu-item routerLink=\\\"/records\\\" \\n      routerLinkActive #rla2=\\\"routerLinkActive\\\" \\n      [nzSelected]=\\\"rla2.isActive\\\">Records</li>\\n    </ul>\\n  </li>\\n  <li nz-menu-group>\\n    <span title>DNS</span>\\n    <ul>\\n      <li nz-menu-item routerLink=\\\"/dns-cache\\\"\\n      routerLinkActive #rla3=\\\"routerLinkActive\\\" \\n      [nzSelected]=\\\"rla3.isActive\\\">Cache</li>\\n    </ul>\\n  </li>\\n  <li nz-menu-group>\\n    <span title>Options</span>\\n    <div style=\\\"padding-left: 10px; padding-right: 10px;\\\">\\n      <nz-select style=\\\"width: 100%;\\\" [(ngModel)]=\\\"currentMode\\\"\\n      (ngModelChange)=\\\"setMode($event)\\\">\\n        <nz-option *ngFor=\\\"let mode of modeList\\\" \\n        [nzLabel]=\\\"mode.label\\\" \\n        [nzValue]=\\\"mode.value\\\"\\n        ></nz-option>\\n      </nz-select>\\n    </div>\\n    <div nz-row class=\\\"st-switch\\\">\\n      <div nz-col nzOffset=\\\"4\\\">\\n          <nz-switch [(ngModel)]=\\\"allow_dump\\\" (click)=\\\"dumpChange()\\\" ></nz-switch>\\n          <span>Dump</span>\\n      </div>\\n    </div>\\n    <div nz-row class=\\\"st-switch\\\">\\n        <div nz-col nzOffset=\\\"4\\\">\\n            <nz-switch [(ngModel)]=\\\"allow_mitm\\\" (click)=\\\"mitmChange()\\\" ></nz-switch>\\n            <span>MITM</span>\\n        </div>\\n    </div>\\n  </li>\\n  <div style=\\\"width: 100%;position: absolute; bottom: 0; text-align: center;margin-bottom: 20px\\\">\\n    <div style=\\\"width: 100%;text-align: center;padding: 5px;\\\">\\n      <button nz-button nzType=\\\"default\\\" [nzSize]=\\\"size\\\" style=\\\"width: 130px;\\\" (click)=\\\"reload()\\\">\\n          <i class=\\\"anticon anticon-reload\\\"></i>Reload\\n      </button>\\n    </div>\\n    <div style=\\\"width: 100%;text-align: center;padding: 5px;\\\">\\n      <button nz-button nzType=\\\"danger\\\" [nzSize]=\\\"size\\\" style=\\\"width: 130px\\\" (click)=\\\"shutdown()\\\">\\n          <i class=\\\"anticon anticon-poweroff\\\"></i>Shutdown\\n      </button>\\n    </div>\\n  </div>\\n</ul>\\n\\n\"","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { DumpService } from '../../service/dump.service';\nimport { GeneralService } from '../../service/general.service';\nimport { Speed } from '../../modules/common.module';\nimport { interval, Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-menus',\n  templateUrl: './menus.component.html',\n  styleUrls: ['./menus.component.css']\n})\nexport class MenusComponent implements OnInit {\n  allow_dump: boolean;\n  allow_mitm: boolean;\n  modeList = [\n    {label: 'Rule Mode', value: 'RULE'},\n    {label: 'Direct Mode', value: 'DIRECT'},\n    {label: 'Remote Mode', value: 'REMOTE'},\n    {label: 'Reject Mode', value: 'REJECT'}];\n  currentMode: string;\n  speed: Speed;\n  secondsCounter: Observable<number>;\n\n  constructor(private dumpService: DumpService, private generalService: GeneralService) {}\n\n  ngOnInit() {\n    this.dumpService.dumpStatus().subscribe(resp => {\n      this.allow_dump = resp.allow_dump;\n      this.allow_mitm = resp.allow_mitm;\n    });\n    this.generalService.getMode().subscribe(mode => this.currentMode = mode);\n    this.speed = {up_speed: '0B/s', down_speed: '0B/s'};\n    this.generalService.speed();\n    this.secondsCounter = interval(1000);\n    this.secondsCounter.subscribe(_ => this.getSpeed());\n  }\n\n  dumpChange() {\n    this.dumpService.allowDump(this.allow_dump).subscribe(resp => {\n      this.allow_dump = resp.allow_dump;\n      this.allow_mitm = resp.allow_mitm;\n    });\n  }\n\n  mitmChange() {\n    this.dumpService.allowMitm(this.allow_mitm).subscribe(resp => {\n      this.allow_dump = resp.allow_dump;\n      this.allow_mitm = resp.allow_mitm;\n    });\n  }\n  shutdown() {\n    this.generalService.shutdown().subscribe();\n  }\n\n  reload() {\n    this.generalService.reload().subscribe();\n  }\n\n  githubHome() {\n    window.open('https://github.com/sipt/shuttle');\n  }\n\n  setMode(value: string) {\n    this.generalService.setMode(value).subscribe(\n      mode => this.currentMode = mode\n    );\n  }\n\n  getSpeed() {\n    this.generalService.speed().subscribe(\n      s => this.speed = s\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<nz-card style=\\\"width:300px;\\\" nzTitle=\\\"Certificate\\\">\\n  <div style=\\\"width: 100%;text-align: center;padding: 5px;\\\">\\n    <button nz-button nzType=\\\"default\\\" style=\\\"width: 130px;\\\" (click)=\\\"generate()\\\">\\n      <i class=\\\"anticon anticon-file-text\\\"></i>\\n      Generate\\n    </button>\\n  </div>\\n  <div style=\\\"width: 100%;text-align: center;padding: 5px;\\\">\\n    <button nz-button nzType=\\\"default\\\" style=\\\"width: 130px;\\\" (click)=\\\"download()\\\">\\n      <i class=\\\"anticon anticon-download\\\"></i>\\n      Download\\n    </button>\\n  </div>\\n</nz-card>\"","import { Component, OnInit } from '@angular/core';\nimport { GeneralService } from '../../service/general.service';\n\n@Component({\n  selector: 'app-mitm',\n  templateUrl: './mitm.component.html',\n  styleUrls: ['./mitm.component.css']\n})\nexport class MitmComponent implements OnInit {\n\n  constructor(private generalService: GeneralService) { }\n\n  ngOnInit() {\n  }\n\n  generate() {\n    this.generalService.generateCert().subscribe();\n  }\n\n  download() {\n    this.generalService.downloadCert();\n  }\n}\n","module.exports = \".st-ext {\\n    width: 100%;\\n    background: #ffffff;\\n}\\n.st-ext-title {\\n    background: #fafafa;\\n    width: 100%;\\n    height: 40px;\\n}\\n.st-ext-content {\\n    height: 460px;\\n}\\n.st-dump-content {\\n    padding-left: 16px;\\n    padding-right: 16px;\\n    overflow: scroll;\\n}\\n\"","module.exports = \"<div [ngStyle]=\\\"tableStyle\\\">\\n  <nz-table #list [nzData]=\\\"records\\\"\\n  nzSize=\\\"small\\\"\\n  [nzShowPagination]=\\\"false\\\"\\n  [nzFrontPagination]=\\\"false\\\"\\n  [nzScroll]=\\\"tbodyScroll\\\">\\n    <thead id=\\\"st-thead\\\">\\n      <tr>\\n        <th nzWidth=\\\"100px\\\">ID</th>\\n        <th nzWidth=\\\"150px\\\">Time</th>\\n        <th nzWidth=\\\"100px\\\">Up/Down</th>\\n        <th nzWidth=\\\"350px\\\">Policy</th>\\n        <th nzWidth=\\\"100px\\\">Protocol</th>\\n        <th>URL</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let record of list.data\\\" (click)=\\\"getDump(record.ID, record.Dumped)\\\">\\n        <td>{{record.ID}}</td>\\n        <td>{{record.Created | date:'MM-dd HH:mm:ss'}}</td>\\n        <td>{{record.Up | capacity}}/{{record.Down | capacity}}</td>\\n        <td>{{record.Proxy.Name}}({{record.Rule.Type}},{{record.Rule.Value}})</td>\\n        <td>{{record.Protocol}}</td>\\n        <td>\\n          <i class=\\\"anticon anticon-spin anticon-loading\\\" *ngIf=\\\"record.Status=='Active'\\\" style=\\\"color: #2db7f5\\\"></i>\\n          <i class=\\\"anticon anticon-check-circle\\\" *ngIf=\\\"record.Status=='Completed' && !record.Dumped\\\" style=\\\"color: #87d068\\\"></i>\\n          <i class=\\\"anticon anticon-close-circle\\\" *ngIf=\\\"record.Status=='Reject'\\\" style=\\\"color: #f50\\\"></i>\\n          <strong *ngIf=\\\"record.Status=='Completed' && record.Dumped\\\">\\n            <i class=\\\"anticon anticon-download\\\" style=\\\"color: #2db7f5\\\"></i>\\n          </strong>\\n          {{record.URL}}\\n        </td>\\n      </tr>\\n    </tbody>\\n  </nz-table>\\n</div>\\n<!-- <nz-affix nzOffsetBottom=\\\"0\\\" >\\n</nz-affix> -->\\n<div class=\\\"st-ext\\\">\\n  <div class=\\\"st-ext-title\\\" (click)=\\\"closeExt()\\\">\\n    <div>\\n      <button style=\\\"margin: 4px;\\\" nz-button (click)=\\\"reflesh()\\\">\\n        <i class=\\\"anticon anticon-reload\\\" style=\\\"color: #2db7f5\\\"></i>\\n      </button>\\n      <button style=\\\"margin: 4px;\\\" nz-button (click)=\\\"clear()\\\">\\n          <i class=\\\"anticon anticon-delete\\\" style=\\\"color: #f50\\\"></i>\\n      </button>\\n      <div style=\\\"float: right;\\\">\\n          <button *ngIf=\\\"!extClosed\\\" style=\\\"margin: 4px;border: 0px; background: #fafafa;\\\" nz-button>\\n              <i class=\\\"anticon anticon-down\\\" style=\\\"color: #2db7f5\\\"></i>\\n          </button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"st-ext-content\\\" *ngIf=\\\"!extClosed\\\">\\n    <nz-tabset [nzSize]=\\\"small\\\" style=\\\"width: 100%;\\\">\\n      <nz-tab nzTitle=\\\"Request\\\">\\n        <div class=\\\"st-dump-content\\\" style=\\\"height: 399px;\\\" [innerHTML]=\\\"dump.req| nl2br\\\">\\n        </div>\\n      </nz-tab>\\n      <nz-tab nzTitle=\\\"Response-Header\\\">\\n        <div class=\\\"st-dump-content\\\" style=\\\"height: 399px;\\\" [innerHTML]=\\\"dump.resp_header| nl2br\\\">\\n        </div>\\n      </nz-tab>\\n      <nz-tab nzTitle=\\\"Response-Body\\\">\\n        <div class=\\\"st-dump-content\\\" style=\\\"height: 399px;\\\" [innerHTML]=\\\"dump.resp_body| html2text | nl2br\\\">\\n        </div>\\n      </nz-tab>\\n    </nz-tabset>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RecordsService } from '../../service/records.service';\nimport { RecordsModule, DumpModule } from '../../modules/records/records.module';\nimport {interval, Observable} from 'rxjs';\n\n@Component({\n  selector: 'app-records',\n  templateUrl: './records.component.html',\n  styleUrls: ['./records.component.css']\n})\nexport class RecordsComponent implements OnInit {\n\n  records: RecordsModule[];\n  dump: DumpModule;\n  extClosed: boolean;\n  tbodyScroll: any;\n  tableStyle: any;\n  secondsCounter: Observable<number>;\n\n  constructor(private service: RecordsService) { }\n\n  ngOnInit() {\n    this.reflesh();\n    this.dump = new DumpModule;\n    this.extClosed = true;\n    this.tbodyScroll = {y: 'calc(100vh - 80px)'};\n    this.tableStyle = {height: 'calc(100vh - 40px)'};\n    // this.secondsCounter = interval(1000);\n    // this.secondsCounter.subscribe(_ => this.reflesh());\n  }\n\n  reflesh() {\n    this.service.getCache().subscribe(list => this.records = list);\n  }\n\n  clear() {\n    this.records = [];\n    this.service.clearCache().subscribe(_ => this.reflesh());\n  }\n\n  getDump(id: string, dumped: boolean) {\n    if (dumped) {\n      this.service.getDumpData(id).subscribe(d => {\n        this.dump = d;\n      });\n      this.openExt();\n    } else {\n      this.dump = new DumpModule;\n    }\n  }\n\n  openExt() {\n    if (this.extClosed) {\n      this.extClosed = false;\n      this.tbodyScroll = {y: 'calc(100vh - 540px)'};\n      this.tableStyle = {height: 'calc(100vh - 500px)'};\n    }\n  }\n\n  closeExt() {\n    if (!this.extClosed) {\n      this.extClosed = true;\n      this.tbodyScroll = {y: 'calc(100vh - 80px)'};\n      this.tableStyle = {height: 'calc(100vh - 40px)'};\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngFor=\\\"let group of list\\\" style=\\\"width: 300px;float:left;margin:0.7em\\\">\\n  <nz-table\\n    #servers\\n    nzSize=\\\"small\\\"\\n    [nzData]=\\\"group.servers\\\"\\n    [nzShowPagination]=\\\"false\\\"\\n    [nzFrontPagination]=\\\"false\\\">\\n    <thead>\\n      <tr>\\n        <th>{{group.name}}({{group.select_type}})\\n          <i class=\\\"anticon anticon-reload\\\"\\n          *ngIf=\\\"group.select_type == 'rtt'\\\" \\n          style=\\\"color: #2db7f5; float: right;\\\"\\n          (click)=\\\"refreshSelect(group.name)\\\"></i>\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let server of servers.data\\\" (click)=\\\"select(group.name, server.name)\\\">\\n        <td>{{server.name}}\\n          <nz-tag *ngIf=\\\"server.rtt\\\">{{server.rtt}}</nz-tag>\\n          <i *ngIf=\\\"server.selected\\\" class=\\\"anticon anticon-check-circle\\\" style=\\\"color: #87d068; float: right;\\\"></i>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </nz-table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ServerGroupModule } from '../../modules/server/server.module';\nimport { ServerService } from '../../service/server.service';\n\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.css']\n})\nexport class ServerComponent implements OnInit {\n  list: ServerGroupModule[];\n\n  constructor(private service: ServerService) { }\n\n  ngOnInit() {\n    this.refresh();\n  }\n\n  refresh() {\n    this.service.getServers().subscribe(list => {\n      list.sort((x, y) => y.servers.length - x.servers.length);\n      this.list = list;\n    });\n  }\n\n  select(group: string, server: string) {\n    for (let i = 0; i < this.list.length; i++) {\n      const element = this.list[i];\n      if (element.name === group && element.select_type === 'rtt') {\n        return ;\n      }\n    }\n    this.service.selectServer(group, server).subscribe(_ => this.refresh());\n  }\n\n  refreshSelect(group: string) {\n    for (let i = 0; i < this.list.length; i++) {\n      const element = this.list[i];\n      if (element.name === group && element.select_type !== 'rtt') {\n        return ;\n      }\n    }\n    this.service.refleshSelect(group).subscribe(_ => this.refresh());\n  }\n}\n","export class Response<T> {\n    code: number;\n    message: string;\n    data: T;\n}\n\nexport class Speed {\n    up_speed: string;\n    down_speed: string;\n}\n\n// export const Host = 'http://localhost:8082';\nexport const Host = '';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\n\nclass Rule {\n  Type: string;\n  Value: string;\n  Policy: string;\n  Options: string[];\n  Comment: string;\n}\n\nclass Proxy {\n  Name: string;\n  Host: string;\n}\n\nexport class RecordsModule {\n  ID: number;\n  Protocol: string;\n  Created: string;\n  Proxy: Proxy;\n  Rule: Rule;\n  Status: string;\n  Up: number;\n  Down: number;\n  URL: string;\n  Dumped: boolean;\n}\n\nexport class DumpModule {\n  req: string;\n  resp_body: string;\n  resp_header: string;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capacity'\n})\nexport class CapacityPipe implements PipeTransform {\n\n  transform(value: number, args?: any): any {\n    let unit = 'B';\n    let t = value;\n    let n = Math.floor(t / 1024);\n    if (n >= 1) {\n      t = n;\n      unit = 'KB';\n      n = Math.floor(t / 1024);\n      if (n >= 1) {\n        t = n;\n        unit = 'MB';\n        n = Math.floor(t / 1024);\n        if (n >= 1) {\n          t = n;\n          unit = 'GB';\n        }\n\n      }\n    }\n    return t + unit;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'html2text'\n})\nexport class Html2textPipe implements PipeTransform {\n\n  transform(value: string, args?: any): any {\n    if (typeof value !== 'string') {\n      return value;\n  }\n    const textParsed = value.replace(/(?:&)/g, '&amp;')\n      .replace(/(?:\")/g, '&quot;')\n      .replace(/(?:<)/g,\t'&lt;')\n      .replace(/(?:>)/g,\t'&gt;')\n      .replace(/(?: )/g,\t'&nbsp;');\n    return textParsed;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ipsFormat'\n})\nexport class IpsFormatPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    const arr = value as string[];\n    let values = '';\n    arr.forEach((v, i) => {\n      if (i > 0) {\n        values += ',';\n      }\n      values += `<div>${v}</div>`;\n    });\n    return values;\n  }\n\n}\n","import {Pipe, PipeTransform, SecurityContext, VERSION} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({\n    name: 'nl2br'\n})\nexport class Nl2BrPipe implements PipeTransform {\n    constructor(private sanitizer: DomSanitizer) {\n    }\n\n    transform(value: string, sanitizeBeforehand?: boolean): string {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        let result: any;\n        const textParsed = value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\n\n        if (!VERSION || VERSION.major === '2') {\n            result = this.sanitizer.bypassSecurityTrustHtml(textParsed);\n        } else if (sanitizeBeforehand) {\n            result = this.sanitizer.sanitize(SecurityContext.HTML, textParsed);\n        } else {\n            result = textParsed;\n        }\n\n        return result;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Response, Host } from '../modules/common.module';\nimport { DnsCacheModule } from '../modules/dns-cache.module';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, concatAll } from 'rxjs/operators';\n\nconst DnsCacheUrl = Host + '/api/dns';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DnsCacheService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  public getCache(): Observable<DnsCacheModule[]> {\n    return this.http.get<Response<DnsCacheModule[]>>(DnsCacheUrl)\n    .pipe(\n      catchError(this.handleError('getCache', {\n        code: 1,\n        message: '',\n        data: [],\n      }))\n    ).pipe(\n      map(resp => (resp as Response<DnsCacheModule[]>).data)\n    );\n  }\n\n  public clearCache(): Observable<any> {\n    return this.http.delete(DnsCacheUrl).pipe(\n      catchError(this.handleError('getCache', {\n        code: 1,\n        message: '',\n        data: [],\n      }))\n    ).pipe(\n      map(\n        resp => {\n          const r = (resp as Response<any> );\n          if (r.code === 1) {\n            console.error(r.message);\n          }\n          return 1;\n        }\n      )\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result ?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Response, Host } from '../modules/common.module';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, concatAll } from 'rxjs/operators';\n\nconst AllowDumpUrl = Host + '/api/dump/allow';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DumpService {\n\n  constructor(private http: HttpClient) { }\n\n  public dumpStatus(): Observable<DumpStatus> {\n    return this.http.get <Response<DumpStatus>>(AllowDumpUrl)\n    .pipe(\n      catchError(this.handleError('getCache', {\n        code: 1,\n        message: '',\n        data: {allow_dump: false, allow_mitm: false}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<DumpStatus>).data)\n    );\n  }\n\n  public allowDump(allow: boolean): Observable<DumpStatus> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n    return this.http.post <Response<DumpStatus>>(AllowDumpUrl, 'allow_dump=' + allow, {headers})\n    .pipe(\n      catchError(this.handleError('getCache', {\n        code: 1,\n        message: '',\n        data: {allow_dump: false, allow_mitm: false}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<DumpStatus>).data)\n    );\n  }\n\n  public allowMitm(allow: boolean): Observable<DumpStatus> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n    return this.http.post <Response<DumpStatus>>(AllowDumpUrl, 'allow_mitm=' + allow, {headers})\n    .pipe(\n      catchError(this.handleError('getCache', {\n        code: 1,\n        message: '',\n        data: {allow_dump: false, allow_mitm: false}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<DumpStatus>).data)\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result ?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n\nclass DumpStatus {\n  allow_dump: boolean;\n  allow_mitm: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Response, Host, Speed } from '../modules/common.module';\nimport { RecordsModule, DumpModule } from '../modules/records/records.module';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, concatAll } from 'rxjs/operators';\n\nconst shutdownUrl = Host + '/api/shutdown';\nconst reloadUrl = Host + '/api/reload';\nconst certUrl = Host + '/api/cert';\nconst modeUrl = Host + '/api/mode';\nconst speedUrl = Host + '/api/speed';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneralService {\n\n  constructor(private http: HttpClient) { }\n\n  public shutdown(): Observable<any> {\n    return this.http.post <Response<any>>(shutdownUrl, {})\n    .pipe(\n      catchError(this.handleError('shutdown', {\n        code: 1,\n        message: '',\n        data: {allow_dump: false, allow_mitm: false}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<any>).data)\n    );\n  }\n\n  public reload(): Observable<any> {\n    return this.http.post <Response<any>>(reloadUrl, {})\n    .pipe(\n      catchError(this.handleError('reload', {\n        code: 1,\n        message: '',\n        data: {}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<any>).data)\n    );\n  }\n\n  public generateCert(): Observable<any> {\n    return this.http.post <Response<any>>(certUrl, {})\n    .pipe(\n      catchError(this.handleError('generateCert', {\n        code: 1,\n        message: '',\n        data: {}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<any>).data)\n    );\n  }\n\n  public downloadCert() {\n    window.open(certUrl);\n  }\n\n  public getMode(): Observable<string> {\n    return this.http.get <Response<any>>(modeUrl)\n    .pipe(\n      catchError(this.handleError('getMode', {\n        code: 1,\n        message: '',\n        data: {}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<string>).data)\n    );\n  }\n\n  public setMode(mode: string): Observable<string> {\n    return this.http.post <Response<any>>(modeUrl + '/' + mode, {})\n    .pipe(\n      catchError(this.handleError('getMode', {\n        code: 1,\n        message: '',\n        data: {}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<string>).data)\n    );\n  }\n\n  public speed(): Observable<Speed> {\n    return this.http.get <Response<Speed>>(speedUrl)\n    .pipe(\n      catchError(this.handleError('speed', {\n        code: 1,\n        message: '',\n        data: {}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<Speed>).data)\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result ?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Response, Host } from '../modules/common.module';\nimport { RecordsModule, DumpModule } from '../modules/records/records.module';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, concatAll } from 'rxjs/operators';\nimport { UTF8 } from '../utils/utils';\n\nconst RecordsUrl = Host + '/api/records';\nconst DumpDataUrl = Host + '/api/dump/data/';\nconst utf8 = new UTF8();\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecordsService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  public getCache(): Observable<RecordsModule[]> {\n    return this.http.get<Response<RecordsModule[]>>(RecordsUrl)\n    .pipe(\n      catchError(this.handleError('getCache', {\n        code: 1,\n        message: '',\n        data: [],\n      }))\n    ).pipe(\n      map(resp => (resp as Response<RecordsModule[]>).data)\n    );\n  }\n\n  public clearCache(): Observable<any> {\n    return this.http.delete(RecordsUrl).pipe(\n      catchError(this.handleError('getCache', {\n        code: 1,\n        message: '',\n        data: [],\n      }))\n    ).pipe(\n      map(\n        resp => {\n          const r = (resp as Response<any> );\n          if (r.code === 1) {\n            console.error(r.message);\n          }\n          return 1;\n        }\n      )\n    );\n  }\n\n  public getDumpData(id: string): Observable<DumpModule> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8');\n    return this.http.get(DumpDataUrl + id, {headers}).pipe(\n      catchError(this.handleError('getDumpData', {\n        code: 1,\n        message: '',\n        data: {},\n      }))\n    ).pipe(\n      map(\n        resp => {\n          const r = (resp as Response<DumpModule> );\n          if (r.code === 1) {\n            console.error(r.message);\n          }\n          const dump = new DumpModule();\n          dump.req = utf8.decode(atob(r.data.req));\n          dump.resp_header = utf8.decode(atob(r.data.resp_header));\n          dump.resp_body = utf8.decode(atob(r.data.resp_body));\n          return dump;\n        }\n      )\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result ?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Response, Host } from '../modules/common.module';\nimport { ServerGroupModule } from '../modules/server/server.module';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, concatAll } from 'rxjs/operators';\n\nconst ServersUrl = Host + '/api/servers';\nconst SelectServerUrl = Host + '/api/server/select';\nconst RefreshSelectUrl = Host + '/api/server/select/refresh';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  public getServers(): Observable<ServerGroupModule[]> {\n    return this.http.get<Response<ServerGroupModule[]>>(ServersUrl)\n    .pipe(\n      catchError(this.handleError('getServers', {\n        code: 1,\n        message: '',\n        data: [],\n      }))\n    ).pipe(\n      map(resp => (resp as Response<ServerGroupModule[]>).data)\n    );\n  }\n\n  public selectServer(group: string, server: string): Observable<any> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n    return this.http.post <Response<any>>(SelectServerUrl, 'group=' + group + '&server=' + server, {headers})\n    .pipe(\n      catchError(this.handleError('selectServer', {\n        code: 1,\n        message: '',\n        data: {}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<any>).data)\n    );\n  }\n\n  public refleshSelect(group: string): Observable<any> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n    return this.http.post <Response<any>>(RefreshSelectUrl, 'group=' + group, {headers})\n    .pipe(\n      catchError(this.handleError('refleshSelect', {\n        code: 1,\n        message: '',\n        data: {}\n      }))\n    ).pipe(\n      map(resp => (resp as Response<any>).data)\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result ?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      // this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","export class UTF8 {\n  /**\n         * Encode multi-byte Unicode string into utf-8 multiple single-byte characters\n         * (BMP / basic multilingual plane only)\n         *\n         * Chars in range U+0080 - U+07FF are encoded in 2 chars, U+0800 - U+FFFF in 3 chars\n         *\n         * @param {String} strUni Unicode string to be encoded as UTF-8\n         * @returns {String} encoded string\n         */\n        public encode(strUni: string): string {\n            // use regular expressions & String.replace callback function for better efficiency\n            // than procedural approaches\n            const strUtf = strUni.replace(/[\\u0080-\\u07ff]/g, // U+0080 - U+07FF => 2 bytes 110yyyyy, 10zzzzzz\n            c => {\n                const cc = c.charCodeAt(0);\n                return String.fromCharCode(0xc0 | cc >> 6, 0x80 | cc & 0x3f);\n            })\n            .replace(/[\\u0800-\\uffff]/g, // U+0800 - U+FFFF => 3 bytes 1110xxxx, 10yyyyyy, 10zzzzzz\n            c => {\n                const cc = c.charCodeAt(0);\n                return String.fromCharCode(0xe0 | cc >> 12, 0x80 | cc >> 6 & 0x3F, 0x80 | cc & 0x3f);\n            });\n            return strUtf;\n        }\n\n        /**\n         * Decode utf-8 encoded string back into multi-byte Unicode characters\n         *\n         * @param {String} strUtf UTF-8 string to be decoded back to Unicode\n         * @returns {String} decoded string\n         */\n        public decode(strUtf: string): string {\n            // note: decode 3-byte chars first as decoded 2-byte strings could appear to be 3-byte char!\n            const strUni = strUtf.replace(/[\\u00e0-\\u00ef][\\u0080-\\u00bf][\\u0080-\\u00bf]/g, // 3-byte chars\n            c => { // (note parentheses for precence)\n                const cc = ((c.charCodeAt(0) & 0x0f) << 12) | ((c.charCodeAt(1) & 0x3f) << 6) | (c.charCodeAt(2) & 0x3f);\n                return String.fromCharCode(cc);\n            })\n            .replace(/[\\u00c0-\\u00df][\\u0080-\\u00bf]/g, // 2-byte chars\n            c => { // (note parentheses for precence)\n                const cc = (c.charCodeAt(0) & 0x1f) << 6 | c.charCodeAt(1) & 0x3f;\n                return String.fromCharCode(cc);\n            });\n            return strUni;\n        }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}